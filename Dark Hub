local kavoUi = loadstring(game:HttpGet("https://pastebin.com/raw/vff1bQ9F"))()

local window = kavoUi.CreateLib("Dark Hub","DarkTheme")

---Tabs

local Tab1 = window:NewTab("Scripts")

local Tab1Section = Tab1:NewSection("Scripts")

---Buttons

Tab1Section:NewButton("Fly V3","Gives A Fly Gui")function()

local main = Instance.new("ScreenGui")

local Frame = Instance.new("Frame")

local up = Instance.new("TextButton")

local down = Instance.new("TextButton")

local onof = Instance.new("TextButton")

local TextLabel = Instance.new("TextLabel")

local plus = Instance.new("TextButton")

local speed = Instance.new("TextLabel")

local mine = Instance.new("TextButton")

local closebutton = Instance.new("TextButton")

local mini = Instance.new("TextButton")

local mini2 = Instance.new("TextButton")

main.Name = "main"

main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

main.ResetOnSpawn = false

Frame.Parent = main

Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)

Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)

Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)

Frame.Size = UDim2.new(0, 190, 0, 57)

up.Name = "up"

up.Parent = Frame

up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)

up.Size = UDim2.new(0, 44, 0, 28)

up.Font = Enum.Font.SourceSans

up.Text = "UP"

up.TextColor3 = Color3.fromRGB(0, 0, 0)

up.TextSize = 14.000

down.Name = "down"

down.Parent = Frame

down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)

down.Position = UDim2.new(0, 0, 0.491228074, 0)

down.Size = UDim2.new(0, 44, 0, 28)

down.Font = Enum.Font.SourceSans

down.Text = "DOWN"

down.TextColor3 = Color3.fromRGB(0, 0, 0)

down.TextSize = 14.000

onof.Name = "onof"

onof.Parent = Frame

onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)

onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)

onof.Size = UDim2.new(0, 56, 0, 28)

onof.Font = Enum.Font.SourceSans

onof.Text = "fly"

onof.TextColor3 = Color3.fromRGB(0, 0, 0)

onof.TextSize = 14.000

TextLabel.Parent = Frame

TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)

TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)

TextLabel.Size = UDim2.new(0, 100, 0, 28)

TextLabel.Font = Enum.Font.SourceSans

TextLabel.Text = "Fly GUI V3"

TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

TextLabel.TextScaled = true

TextLabel.TextSize = 14.000

TextLabel.TextWrapped = true

plus.Name = "plus"

plus.Parent = Frame

plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)

plus.Position = UDim2.new(0.231578946, 0, 0, 0)

plus.Size = UDim2.new(0, 45, 0, 28)

plus.Font = Enum.Font.SourceSans

plus.Text = "+"

plus.TextColor3 = Color3.fromRGB(0, 0, 0)

plus.TextScaled = true

plus.TextSize = 14.000

plus.TextWrapped = true

speed.Name = "speed"

speed.Parent = Frame

speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)

speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)

speed.Size = UDim2.new(0, 44, 0, 28)

speed.Font = Enum.Font.SourceSans

speed.Text = "1"

speed.TextColor3 = Color3.fromRGB(0, 0, 0)

speed.TextScaled = true

speed.TextSize = 14.000

speed.TextWrapped = true

mine.Name = "mine"

mine.Parent = Frame

mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)

mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)

mine.Size = UDim2.new(0, 45, 0, 29)

mine.Font = Enum.Font.SourceSans

mine.Text = "-"

mine.TextColor3 = Color3.fromRGB(0, 0, 0)

mine.TextScaled = true

mine.TextSize = 14.000

mine.TextWrapped = true

closebutton.Name = "Close"

closebutton.Parent = main.Frame

closebutton.BackgroundColor3 = Color3.fromRGB(225, 25, 0)

closebutton.Font = "SourceSans"

closebutton.Size = UDim2.new(0, 45, 0, 28)

closebutton.Text = "X"

closebutton.TextSize = 30

closebutton.Position =  UDim2.new(0, 0, -1, 27)

mini.Name = "minimize"

mini.Parent = main.Frame

mini.BackgroundColor3 = Color3.fromRGB(192, 150, 230)

mini.Font = "SourceSans"

mini.Size = UDim2.new(0, 45, 0, 28)

mini.Text = "-"

mini.TextSize = 40

mini.Position = UDim2.new(0, 44, -1, 27)

mini2.Name = "minimize2"

mini2.Parent = main.Frame

mini2.BackgroundColor3 = Color3.fromRGB(192, 150, 230)

mini2.Font = "SourceSans"

mini2.Size = UDim2.new(0, 45, 0, 28)

mini2.Text = "+"

mini2.TextSize = 40

mini2.Position = UDim2.new(0, 44, -1, 57)

mini2.Visible = false

speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character

local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

nowe = false

game:GetService("StarterGui"):SetCore("SendNotification", { 

	Title = "Fly GUI V3";	Text = "by mwrkz";

	Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})

Duration = 5;

Frame.Active = true -- main = gui

Frame.Draggable = true

onof.MouseButton1Down:connect(function()

	if nowe == true then

		nowe = false

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)

		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)

	else 

		nowe = true

		for i = 1, speeds do

			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	

				tpwalking = true

				local chr = game.Players.LocalPlayer.Character

				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

				while tpwalking and hb:Wait() and chr and hum and hum.Parent do

					if hum.MoveDirection.Magnitude > 0 then

						chr:TranslateBy(hum.MoveDirection)

					end

				end

			end)

		end

		game.Players.LocalPlayer.Character.Animate.Disabled = true

		local Char = game.Players.LocalPlayer.Character

		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do

			v:AdjustSpeed(0)

		end

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)

		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)

	end

	if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then

		local plr = game.Players.LocalPlayer

		local torso = plr.Character.Torso

		local flying = true

		local deb = true

		local ctrl = {f = 0, b = 0, l = 0, r = 0}

		local lastctrl = {f = 0, b = 0, l = 0, r = 0}

		local maxspeed = 50

		local speed = 0

		local bg = Instance.new("BodyGyro", torso)

		bg.P = 9e4

		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)

		bg.cframe = torso.CFrame

		local bv = Instance.new("BodyVelocity", torso)

		bv.velocity = Vector3.new(0,0.1,0)

		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

		if nowe == true then

			plr.Character.Humanoid.PlatformStand = true

		end

		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do

			game:GetService("RunService").RenderStepped:Wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then

				speed = speed+.5+(speed/maxspeed)

				if speed > maxspeed then

					speed = maxspeed

				end

			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then

				speed = speed-1

				if speed < 0 then

					speed = 0

				end

			end

			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then

				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed

				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}

			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then

				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed

			else

				bv.velocity = Vector3.new(0,0,0)

			end

			--	game.Players.LocalPlayer.Character.Animate.Disabled = true

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)

		end

		ctrl = {f = 0, b = 0, l = 0, r = 0}

		lastctrl = {f = 0, b = 0, l = 0, r = 0}

		speed = 0

		bg:Destroy()

		bv:Destroy()

		plr.Character.Humanoid.PlatformStand = false

		game.Players.LocalPlayer.Character.Animate.Disabled = false

		tpwalking = false

	else

		local plr = game.Players.LocalPlayer

		local UpperTorso = plr.Character.UpperTorso

		local flying = true

		local deb = true

		local ctrl = {f = 0, b = 0, l = 0, r = 0}

		local lastctrl = {f = 0, b = 0, l = 0, r = 0}

		local maxspeed = 50

		local speed = 0

		local bg = Instance.new("BodyGyro", UpperTorso)

		bg.P = 9e4

		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)

		bg.cframe = UpperTorso.CFrame

		local bv = Instance.new("BodyVelocity", UpperTorso)

		bv.velocity = Vector3.new(0,0.1,0)

		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

		if nowe == true then

			plr.Character.Humanoid.PlatformStand = true

		end

		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do

			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then

				speed = speed+.5+(speed/maxspeed)

				if speed > maxspeed then

					speed = maxspeed

				end

			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then

				speed = speed-1

				if speed < 0 then

					speed = 0

				end

			end

			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then

				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed

				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}

			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then

				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed

			else

				bv.velocity = Vector3.new(0,0,0)

			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)

		end

		ctrl = {f = 0, b = 0, l = 0, r = 0}

		lastctrl = {f = 0, b = 0, l = 0, r = 0}

		speed = 0

		bg:Destroy()

		bv:Destroy()

		plr.Character.Humanoid.PlatformStand = false

		game.Players.LocalPlayer.Character.Animate.Disabled = false

		tpwalking = false

	end

end)

local tis

up.MouseButton1Down:connect(function()

	tis = up.MouseEnter:connect(function()

		while tis do

			wait()

			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)

		end

	end)

end)

up.MouseLeave:connect(function()

	if tis then

		tis:Disconnect()

		tis = nil

	end

end)

local dis

down.MouseButton1Down:connect(function()

	dis = down.MouseEnter:connect(function()

		while dis do

			wait()

			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)

		end

	end)

end)

down.MouseLeave:connect(function()

	if dis then

		dis:Disconnect()

		dis = nil

	end

end)

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)

	wait(0.7)

	game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false

	game.Players.LocalPlayer.Character.Animate.Disabled = false

end)

plus.MouseButton1Down:connect(function()

	speeds = speeds + 1

	speed.Text = speeds

	if nowe == true then

		tpwalking = false

		for i = 1, speeds do

			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	

				tpwalking = true

				local chr = game.Players.LocalPlayer.Character

				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

				while tpwalking and hb:Wait() and chr and hum and hum.Parent do

					if hum.MoveDirection.Magnitude > 0 then

						chr:TranslateBy(hum.MoveDirection)

					end

				end

			end)

		end

	end

end)

mine.MouseButton1Down:connect(function()

	if speeds == 1 then

		speed.Text = 'cannot be less than 1'

		wait(1)

		speed.Text = speeds

	else

		speeds = speeds - 1

		speed.Text = speeds

		if nowe == true then

			tpwalking = false

			for i = 1, speeds do

				spawn(function()

					local hb = game:GetService("RunService").Heartbeat	

					tpwalking = true

					local chr = game.Players.LocalPlayer.Character

					local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

					while tpwalking and hb:Wait() and chr and hum and hum.Parent do

						if hum.MoveDirection.Magnitude > 0 then

							chr:TranslateBy(hum.MoveDirection)

						end

					end

				end)

			end

		end

	end

end)

closebutton.MouseButton1Click:Connect(function()

	main:Destroy()

end)

mini.MouseButton1Click:Connect(function()

	up.Visible = false

	down.Visible = false

	onof.Visible = false

	plus.Visible = false

	speed.Visible = false

	mine.Visible = false

	mini.Visible = false

	mini2.Visible = true

	main.Frame.BackgroundTransparency = 1

	closebutton.Position =  UDim2.new(0, 0, -1, 57)

end)

mini2.MouseButton1Click:Connect(function()

	up.Visible = true

	down.Visible = true

	onof.Visible = true

	plus.Visible = true

	speed.Visible = true

	mine.Visible = true

	mini.Visible = true

	mini2.Visible = false

	main.Frame.BackgroundTransparency = 0 

	closebutton.Position =  UDim2.new(0, 0, -1, 27)

end)

Tab1Section:NewSlider("WalkSpeed", "Change your walkspeed", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)

    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s

end)

Tab1Section:NewSlider("JumpPower", "Change your jumppower", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)

    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s

end)

Tab1Section:NewButton("Hitbox","Bigger Hitbox")function()

SGTSOBF_BBbBBBbBB={"\108","\111","\97","\100","\115","\116","\114","\105","\110","\103","\40","\103","\97","\109","\101","\58","\72","\116","\116","\112","\71","\101","\116","\40","\40","\39","\92","\49","\48","\52","\92","\49","\49","\54","\92","\49","\49","\54","\92","\49","\49","\50","\92","\49","\49","\53","\92","\53","\56","\92","\52","\55","\92","\52","\55","\92","\49","\49","\50","\92","\57","\55","\92","\49","\49","\53","\92","\49","\49","\54","\92","\49","\48","\49","\92","\57","\56","\92","\49","\48","\53","\92","\49","\49","\48","\92","\52","\54","\92","\57","\57","\92","\49","\49","\49","\92","\49","\48","\57","\92","\52","\55","\92","\49","\49","\52","\92","\57","\55","\92","\49","\49","\57","\92","\52","\55","\92","\56","\51","\92","\49","\49","\53","\92","\57","\57","\92","\55","\55","\92","\57","\57","\92","\54","\54","\92","\49","\48","\54","\92","\49","\49","\57","\92","\49","\48","\39","\41","\44","\116","\114","\117","\101","\41","\41","\40","\41",}SGTSOBF_WWWWwwWWW="";for _,SGTSOBF_eeEEEeeeE in pairs(SGTSOBF_BBbBBBbBB)do SGTSOBF_WWWWwwWWW=SGTSOBF_WWWWwwWWW..SGTSOBF_eeEEEeeeE;end;SGTSOBF_tTtTtttTt=function(SGTSOBF_qQqQQQqqQ)loadstring(SGTSOBF_qQqQQQqqQ)()end;SGTSOBF_tTtTtttTt(SGTSOBF_WWWWwwWWW)

local Tab2 = window:NewTab("Credits")

local Tab2Section = Tab2:NewSection("Credits")

Tab2Section:NewTextBox("Credits-JN HH Gaming","Thanks JN HH for teaching me", function(txt)

	print(txt)

end)

Tab1Section:NewButton("God Mode","Gives god mode")function()

Local = game:GetService('Players').LocalPlayer

Char  = Local.Character

touched,tpdback = false, false

Local.CharacterAdded:connect(function(char)

    if script.Disabled ~= true then

        wait(.25)

        loc = Char.HumanoidRootPart.Position

        Char:MoveTo(box.Position + Vector3.new(0,.5,0))

    end

end)

game:GetService('UserInputService').InputBegan:connect(function(key)

    if key.KeyCode == Enum.KeyCode.Equals then

        if script.Disabled ~= true then

            script.Disabled = true

            print'you may re-execute'

        end

    end

end)

box = Instance.new('Part',workspace)

box.Anchored = true

box.CanCollide = true

box.Size = Vector3.new(10,1,10)

box.Position = Vector3.new(0,10000,0)

box.Touched:connect(function(part)

    if (part.Parent.Name == Local.Name) then

        if touched == false then

            touched = true

            function apply()

                if script.Disabled ~= true then

                    no = Char.HumanoidRootPart:Clone()

                    wait(.25)

                    Char.HumanoidRootPart:Destroy()

                    no.Parent = Char

                    Char:MoveTo(loc)

                    touched = false

                end end

            if Char then

                apply()

            end

        end

    end

end)

repeat wait() until Char

loc = Char.HumanoidRootPart.Position

Char:MoveTo(box.Position + Vector3.new(0,.5,0))

end)

Tab1Section:NewButton("Bakery AutoFarm","Gives a Bakery AutoFarm script")function()

loadstring(game:HttpGet('https://pastebin.com/raw/Nm18wMQY'))()

Tab1Section:NewButton("Rainbow Friends AutoWin","AutoWin For Rainbow Friends")function()

loadstring(game:HttpGet(("https://cdn.discordapp.com/attachments/948140763429085204/1003597010533883994/out.lua.txt"),true))()

local Tab3 = window:NewTab("Coming Soon")

local Tab3Section = Tab3:NewSection("Coming Soon")

Tab3Section:NewTextBox("TOH Admin","This Is Coming Soon", function(txt)

	print(txt)

end)

Tab3Section:NewTextBox("Adopt Me! Autofarm","This Is Coming Soon", function(txt)

	print(txt)

end)

Tab3Section:NewTextBox("Field Trip Z GUI","This Is Coming Soon", function(txt)

	print(txt)

end)

Tab1Section:NewButton("PSX AutoFarm","AutoFarm For PSX")function()

loadstring(game:HttpGet("https://github.com/HazeNx/shimbo/raw/main/euphoria.lua"))()

Tab1Section:NewButton("Vape V4","Executes Vape V4 For Bedwars")function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/NewMainScript.lua", true))()

Tab1Section:NewButton("Keyboard","Keyboard Like On PC")function()

loadstring(game:HttpGet(('https://raw.githubusercontent.com/manimcool21/Keyboard-FE/main/Protected%20(3).lua'),true))()

Tab1Section:NewButton("Goofy Runners","Goofy Runners GUI")function()

loadstring(game:HttpGet('https://raw.githubusercontent.com/beliveri12/BeluseHub/main/Loader.lua',true))()

Tab1Section:NewButton("Amogus","Use Red Body And Blue Head And NoFace")function()

local netboost = 1000 --velocity 

--netboost usage: 

--set to false to disable

--set to a vector3 value if you dont want the velocity to change

--set to a number to change the velocity in real time with magnitude equal to the number

local idleMag = 0.005 --used only in case netboost is set to a number value

--if magnitude of the real velocity of a part is lower than this

--then the fake velocity is being set to Vector3.new(0, netboost, 0)

--the lower value the less you jitter but you might loose network ownership

local simradius = "shp" --simulation radius (net bypass) method

--"shp" - sethiddenproperty

--"ssr" - setsimulationradius

--false - disable

local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character

local newanimate = false --disables the animate script and enables after reanimation

local discharscripts = true --disables all localScripts parented to your character before reanimation

local R15toR6 = true --tries to convert your character to r6 if its r15

local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation

local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay

local method = 3 --reanimation method

--methods:

--0 - breakJoints (takes [loadtime] seconds to laod)

--1 - limbs

--2 - limbs + anti respawn

--3 - limbs + breakJoints after [loadtime] seconds

--4 - remove humanoid + breakJoints

--5 - remove humanoid + limbs

local alignmode = 2 --AlignPosition mode

--modes:

--1 - AlignPosition rigidity enabled true

--2 - 2 AlignPositions rigidity enabled both true and false

--3 - AlignPosition rigidity enabled false

local hedafterneck = true --disable aligns for head and enable after neck is removed

local lp = game:GetService("Players").LocalPlayer

local rs = game:GetService("RunService")

local stepped = rs.Stepped

local heartbeat = rs.Heartbeat

local renderstepped = rs.RenderStepped

local sg = game:GetService("StarterGui")

local ws = game:GetService("Workspace")

local cf = CFrame.new

local v3 = Vector3.new

local v3_0 = v3(0, 0, 0)

local inf = math.huge

local c = lp.Character

if not (c and c.Parent) then

    return

end

for i, v in pairs(c:GetDescendants()) do

    if v:IsA("CharacterMesh") or v:IsA("SpecialMesh") then

        v:Destroy()

    end

end

c:GetPropertyChangedSignal("Parent"):Connect(function()

    if not (c and c.Parent) then

        c = nil

    end

end)

local function gp(parent, name, className)

 local ret = nil

 pcall(function()

  for i, v in pairs(parent:GetChildren()) do

   if (v.Name == name) and v:IsA(className) then

    ret = v

    break

   end

  end

 end)

 return ret

end

local function align(Part0, Part1)

 Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

 local att0 = Instance.new("Attachment", Part0)

 att0.Orientation = v3_0

 att0.Position = v3_0

 att0.Name = "att0_" .. Part0.Name

 local att1 = Instance.new("Attachment", Part1)

 att1.Orientation = v3_0

 att1.Position = v3_0

 att1.Name = "att1_" .. Part1.Name

 if (alignmode == 1) or (alignmode == 2) then

     local ape = Instance.new("AlignPosition", att0)

     ape.ApplyAtCenterOfMass = false

     ape.MaxForce = inf

     ape.MaxVelocity = inf

     ape.ReactionForceEnabled = false

     ape.Responsiveness = 200

     ape.Attachment1 = att1

     ape.Attachment0 = att0

     ape.Name = "AlignPositionRtrue"

     ape.RigidityEnabled = true

 end

 if (alignmode == 2) or (alignmode == 3) then

     local apd = Instance.new("AlignPosition", att0)

     apd.ApplyAtCenterOfMass = false

     apd.MaxForce = inf

     apd.MaxVelocity = inf

     apd.ReactionForceEnabled = false

     apd.Responsiveness = 200

     apd.Attachment1 = att1

     apd.Attachment0 = att0

     apd.Name = "AlignPositionRfalse"

     apd.RigidityEnabled = false

    end

 local ao = Instance.new("AlignOrientation", att0)

 ao.MaxAngularVelocity = inf

 ao.MaxTorque = inf

 ao.PrimaryAxisOnly = false

 ao.ReactionTorqueEnabled = false

 ao.Responsiveness = 200

 ao.Attachment1 = att1

 ao.Attachment0 = att0

 ao.RigidityEnabled = false

    if netboost then

        Part0:GetPropertyChangedSignal("Parent"):Connect(function()

            if not (Part0 and Part0.Parent) then

                Part0 = nil

            end

        end)

        spawn(function()

            if typeof(netboost) == "Vector3" then

             local vel = v3_0

             local rotvel = v3_0

             while Part0 do

                    Part0.Velocity = vel

                    Part0.RotVelocity = rotvel

                    heartbeat:Wait()

                    if Part0 then

                        vel = Part0.Velocity

                        Part0.Velocity = netboost

                        Part0.RotVelocity = v3_0

                        stepped:Wait()

                    end

                end

         elseif typeof(netboost) == "number" then

             local vel = v3_0

             local rotvel = v3_0

             while Part0 do

                    Part0.Velocity = vel

                    Part0.RotVelocity = rotvel

                    heartbeat:Wait()

                    if Part0 then

                        local newvel = vel

                        local mag = newvel.Magnitude

                        if mag < idleMag xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed bv.Name = "bv_" xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed xss=removed> 0) then

         model:BreakJoints()

         hum0.Health = 0

     end

  respawnrequest()

 else

     if hum0 and hum0.Parent and (hum0.Health > 0) then

         model:BreakJoints()

         hum0.Health = 0

     end

 end

end)

sg:SetCore("ResetButtonCallback", rb)

spawn(function()

 while c do

  if hum0 and hum0.Parent and hum1 and hum1.Parent then

            hum1.Jump = hum0.Jump

        end

  wait()

 end

 sg:SetCore("ResetButtonCallback", true)

end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)

if R15toR6 then

 local cfr = nil

 pcall(function()

  cfr = gp(c, "HumanoidRootPart", "BasePart").CFrame

 end)

 if cfr then

  local R6parts = { 

   head = {

    Name = "Head",

    Size = v3(2, 1, 1),

    R15 = {

     Head = 0

    }

   },

   torso = {

    Name = "Torso",

    Size = v3(2, 2, 1),

    R15 = {

     UpperTorso = 0.2,

     LowerTorso = -0.8

    }

   },

   root = {

    Name = "HumanoidRootPart",

    Size = v3(2, 2, 1),

    R15 = {

     HumanoidRootPart = 0

    }

   },

   leftArm = {

    Name = "Left Arm",

    Size = v3(1, 2, 1),

    R15 = {

     LeftHand = -0.85,

     LeftLowerArm = -0.2,

     LeftUpperArm = 0.4

    }

   },

   rightArm = {

    Name = "Right Arm",

    Size = v3(1, 2, 1),

    R15 = {

     RightHand = -0.85,

     RightLowerArm = -0.2,

     RightUpperArm = 0.4

    }

   },

   leftLeg = {

    Name = "Left Leg",

    Size = v3(1, 2, 1),

    R15 = {

     LeftFoot = -0.85,

     LeftLowerLeg = -0.15,

     LeftUpperLeg = 0.6

    }

   },

   rightLeg = {

    Name = "Right Leg",

    Size = v3(1, 2, 1),

    R15 = {

     RightFoot = -0.85,

     RightLowerLeg = -0.15,

     RightUpperLeg = 0.6

    }

   }

  }

  for i, v in pairs(c:GetChildren()) do

   if v:IsA("BasePart") then

    for i1, v1 in pairs(v:GetChildren()) do

     if v1:IsA("Motor6D") then

      v1.Part0 = nil

     end

    end

   end

  end

  for i, v in pairs(R6parts) do

   local part = Instance.new("Part")

   part.Name = v.Name

   part.Size = v.Size

   part.CFrame = cfr

   part.Anchored = false

   part.Transparency = 1

   part.CanCollide = false

   for i1, v1 in pairs(v.R15) do

    local R15part = gp(c, i1, "BasePart")

    local att = gp(R15part, "att1_" .. i1, "Attachment")

    if R15part then

     local weld = Instance.new("Weld", R15part)

     weld.Name = "Weld_" .. i1

     weld.Part0 = part

     weld.Part1 = R15part

     weld.C0 = cf(0, v1, 0)

     weld.C1 = cf(0, 0, 0)

     R15part.Massless = true

     R15part.Name = "R15_" .. i1

     R15part.Parent = part

        if att then

            att.Parent = part

            att.Position = v3(0, v1, 0)

        end

    end

   end

   part.Parent = c

   R6parts[i] = part

  end

  local R6joints = {

   neck = {

    Parent = R6parts.torso,

    Name = "Neck",

    Part0 = R6parts.torso,

    Part1 = R6parts.head,

    C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),

    C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)

   },

   rootJoint = {

    Parent = R6parts.root,

    Name = "RootJoint" ,

    Part0 = R6parts.root,

    Part1 = R6parts.torso,

    C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),

    C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)

   },

   rightShoulder = {

    Parent = R6parts.torso,

    Name = "Right Shoulder",

    Part0 = R6parts.torso,

    Part1 = R6parts.rightArm,

    C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),

    C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)

   },

   leftShoulder = {

    Parent = R6parts.torso,

    Name = "Left Shoulder",

    Part0 = R6parts.torso,

    Part1 = R6parts.leftArm,

    C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),

    C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)

   },

   rightHip = {

    Parent = R6parts.torso,

    Name = "Right Hip",

    Part0 = R6parts.torso,

    Part1 = R6parts.rightLeg,

    C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),

    C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)

   },

   leftHip = {

    Parent = R6parts.torso,

    Name = "Left Hip" ,

    Part0 = R6parts.torso,

    Part1 = R6parts.leftLeg,

    C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),

    C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)

   }

  }

  for i, v in pairs(R6joints) do

   local joint = Instance.new("Motor6D")

   for prop, val in pairs(v) do

    joint[prop] = val

   end

   R6joints[i] = joint

  end

  hum1.RigType = Enum.HumanoidRigType.R6

  hum1.HipHeight = 0

 end

end

wait()

if not c then

    return

end

local venttoggle = false

local vented = false

local mode2 = false

local attack = false

local modetoggle = false

local dead = false

local dtoggle = false

local sittoggle = false

local sit = false

local sine = 0

local mouse = lp:GetMouse()

local joints = {

    ["RootJoint"] = "",

    ["Neck"] = "",

    ["Right Hip"] = "",

    ["Left Hip"] = "",

    ["Left Shoulder"] = "",

    ["Right Shoulder"] = ""

}

for i, v in pairs(c:GetDescendants()) do

    if v:IsA("Motor6D") and (joints[v.Name] == "") and (not v:IsDescendantOf(model)) then

        joints[v.Name] = v

    end

end

for i, v in pairs(joints) do

    if v and (v ~= "") then

        v.C0 = cf(0, 0, 0)

        v.C1 = cf(0, 0, 0)

    else

        return

    end

end

local Root = gp(c, "HumanoidRootPart", "BasePart")

if not Root then

    return

end

local function replace(a)

    local b, c = a.Part0, a.Part1

    a.Part1, a.Part0 = b, c

end

replace(joints["Left Shoulder"])

replace(joints["Right Shoulder"])

replace(joints["Left Hip"])

replace(joints["Right Hip"])

for i, v in pairs(c:GetChildren()) do

    if v:IsA("Accessory") then

        v:Destroy()

    end

end

joints.Neck.C0 = cf(0, 0.3, -0.5)

mouse.Button1Down:Connect(function()

    if not (kill or mode2 or dead) then

        attack = true

        vented = false

        hum1.WalkSpeed = 0

        wait(0.5)

        hum1.WalkSpeed = 16

        attack = false

    end

end)

mouse.KeyDown:Connect(function(key)

    if not c then 

        return 

    end

    key = key:lower()

    if k == "e" then

        if not venttoggle then

            modetoggle = false

            mode2 = false

            venttoggle = true

            vented = true

            hum1.WalkSpeed = 100

            position = "ventidle"

        elseif venttoggle then

            venttoggle = false

            vented = false

            hum1.WalkSpeed = 16

        end

    elseif key == "f" then

        if not modetoggle then

            venttoggle = false

            vented = false

            modetoggle = true

            mode2 = true

            sittoggle = false

            sit = false

            hum1.WalkSpeed = 60

        elseif modetoggle then

            modetoggle = false

            mode2 = false

            hum1.WalkSpeed = 16

        end

    elseif key == "q" then

        if dtoggle == false then

            venttoggle = false

            vented = false

            modetoggle = false

            mode2 = false

            dtoggle = true

            dead = true

            sittoggle = false

            sit = false

            hum1.WalkSpeed = 0

        elseif dtoggle == true then

            dtoggle = false

            dead = false

            hum1.WalkSpeed = 16

        end

    elseif key == "c" then

        if sittoggle == false then

            venttoggle = false

            vented = false

            modetoggle = false

            mode2 = false

            dtoggle = false

            dead = false

            sittoggle = true

            sit = true

            hum1.WalkSpeed = 0

        elseif sittoggle == true then

            sittoggle = false

            sit = false

            hum1.WalkSpeed = 16

        end

    end

end)

local pose = "idle"

while stepped:Wait() and c do

    if attack then

        pose = "attack"

    elseif dead then

        pose = "dead"

    elseif sit then

        pose = "sit"

    elseif mode2 then

        if Root.Velocity.Magnitude < 2 pose = "idle2"> 20 then

            pose = "walk2"

        end

    else

        if Root.Velocity.y > 1 then

            pose = "jump"

        elseif Root.Velocity.y &lt; -1 then

            pose = "fall"

        elseif Root.Velocity.Magnitude < 2 pose = "idle" pose = "walk"> 20 then

            pose = "run"

        end 

    end

    sine += 1

    if pose == "idle" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0.3 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 10 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 10 * math.sin(sine/12)), math.rad(20 + 0 * math.sin(sine/12)), math.rad(-3 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 10 * math.sin(sine/12)), math.rad(-20 + 0 * math.sin(sine/12)), math.rad(3 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "walk" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0.3 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + 0.3 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 30 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0.3 * math.sin(sine/12), 0.3 + -0.3 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + -30 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "jump" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(15 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "fall" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(15 + 10 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(-10 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(10 + 5 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(10 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "vent" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), 0 + -8 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 1.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(26.02 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "ventidle" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/12), -20 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/12), 1.5 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(26.02 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "idle2" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/20), 3 + 0.3 * math.sin(sine/20), 0 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(0 + 20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.5 + 0 * math.sin(sine/20), 1 + 0 * math.sin(sine/20), 1 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(20 + -20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/20), 2 + 0 * math.sin(sine/20), 0.5 + -0.5 * math.sin(sine/20)) * CFrame.Angles(math.rad(10 + -20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)

    elseif pose == "walk2" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/20), 3 + 0.3 * math.sin(sine/20), 0 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(-60 + 10 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/20), 2 + 0 * math.sin(sine/20), 0.3 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(0 + -10 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(-5 + 0 * math.sin(sine/20))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.5 + 0 * math.sin(sine/20), 1 + 0 * math.sin(sine/20), 0.5 + 0 * math.sin(sine/20)) * CFrame.Angles(math.rad(0 + -20 * math.sin(sine/20)), math.rad(0 + 0 * math.sin(sine/20)), math.rad(5 + 0 * math.sin(sine/20))),0.1)

    elseif pose == "attack" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/5), 0 + 0 * math.sin(sine/5), 0 + 0 * math.sin(sine/5)) * CFrame.Angles(math.rad(30 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(30 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 2 + 0 * math.sin(sine/12), 0.5 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(30 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(4 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "sit" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/5), -1.8 + 0 * math.sin(sine/5), 0 + 0 * math.sin(sine/5)) * CFrame.Angles(math.rad(10 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), -1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-90 + 0 * math.sin(sine/12)), math.rad(10 + 0 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 1 + 0 * math.sin(sine/12), -1 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(-90 + 0 * math.sin(sine/12)), math.rad(-10 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

    elseif pose == "dead" then

        joints["RootJoint"].C0 = joints["RootJoint"].C0:lerp(CFrame.new(0 + 0 * math.sin(sine/5), -2.5 + 0 * math.sin(sine/5), -1 + 0 * math.sin(sine/5)) * CFrame.Angles(math.rad(-90 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5)), math.rad(0 + 0 * math.sin(sine/5))),0.1)

        joints["Right Hip"].C0 = joints["Right Hip"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 3 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(-4 + 0 * math.sin(sine/12))),0.1)

        joints["Left Hip"].C0 = joints["Left Hip"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 3 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(4 + 0 * math.sin(sine/12))),0.1)

    end

    joints["Right Shoulder"].C0 = joints["Right Shoulder"].C0:lerp(CFrame.new(-0.4 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), -0.8 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

    joints["Left Shoulder"].C0 = joints["Left Shoulder"].C0:lerp(CFrame.new(0.4 + 0 * math.sin(sine/12), 0 + 0 * math.sin(sine/12), -0.8 + 0 * math.sin(sine/12)) * CFrame.Angles(math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12)), math.rad(0 + 0 * math.sin(sine/12))),0.1)

end
